class HTMLIFrameElement extends HTMLElement {
}
defineGlobalProperty("HTMLIFrameElement", {
  value: HTMLIFrameElement,
  configurable: true
});
defineGlobalProperty("location", {
  value: globalThis.location ?? { protocol: "https:" },
  configurable: true
});
defineGlobalProperty("navigator", {
  value: globalThis.navigator ?? { userAgent: "" },
  configurable: true
});
class CSSStyleDeclaration {
  getPropertyValue(_key) {
    return void 0;
  }
  removeProperty(_key) {
  }
  setProperty(_key, _value) {
  }
  get cssText() {
    return "";
  }
  set cssText(_css) {
  }
}
const STYLE = Symbol("style");
Object.defineProperty(Element.prototype, "style", {
  configurable: true,
  get() {
    let style = this[STYLE];
    if (!style) {
      style = new CSSStyleDeclaration();
      this[STYLE] = style;
    }
    return style;
  },
  set(cssText) {
    this.style.cssText = String(cssText);
  }
});
function defineGlobalProperty(name, descriptor) {
  Object.defineProperty(window, name, descriptor);
  Object.defineProperty(globalThis, name, descriptor);
}
