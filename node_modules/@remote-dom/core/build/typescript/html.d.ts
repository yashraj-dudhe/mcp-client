export declare function html<Result extends null | Node | Node[] = null | Node | Node[]>(strings: TemplateStringsArray, ...values: any[]): Result;
export type PropertiesWithChildren<Properties extends Record<string, any> = {}, Children extends Node = Node> = Properties & {
    children: Children[];
};
export interface Component<Properties extends Record<string, any> = {}, Children extends Node = Node> {
    (properties: PropertiesWithChildren<Properties, Children>): Node | string | (Node | string)[];
}
export declare function h<Properties extends Record<string, any> = Record<string, never>>(name: string | Component<Properties, any>, properties?: Properties, ...children: (Node | string | (Node | string)[])[]): Node | Node[] | null;
//# sourceMappingURL=html.d.ts.map