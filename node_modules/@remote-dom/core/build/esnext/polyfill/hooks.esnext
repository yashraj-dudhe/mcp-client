import { HOOKS } from '@remote-dom/polyfill';
import { MUTATION_TYPE_INSERT_CHILD, MUTATION_TYPE_REMOVE_CHILD, MUTATION_TYPE_UPDATE_TEXT } from '../constants.esnext';
import { remoteConnection, connectRemoteNode, remoteId, serializeRemoteNode, disconnectRemoteNode, updateRemoteElementAttribute } from '../elements/internals.esnext';
import { window } from './window.esnext';

const hooks = window[HOOKS];
hooks.insertChild = (parent, node, index) => {
  const connection = remoteConnection(parent);
  if (connection == null) return;
  connectRemoteNode(node, connection);
  connection.mutate([
    [
      MUTATION_TYPE_INSERT_CHILD,
      remoteId(parent),
      serializeRemoteNode(node),
      index
    ]
  ]);
};
hooks.removeChild = (parent, node, index) => {
  const connection = remoteConnection(parent);
  if (connection == null) return;
  disconnectRemoteNode(node);
  connection.mutate([[MUTATION_TYPE_REMOVE_CHILD, remoteId(parent), index]]);
};
hooks.setText = (text, data) => {
  const connection = remoteConnection(text);
  if (connection == null) return;
  connection.mutate([[MUTATION_TYPE_UPDATE_TEXT, remoteId(text), data]]);
};
hooks.setAttribute = (element, name, value) => {
  if (element.tagName.includes("-")) return;
  updateRemoteElementAttribute(element, name, value);
};
hooks.removeAttribute = (element, name) => {
  if (element.tagName.includes("-")) return;
  updateRemoteElementAttribute(element, name);
};

export { hooks };
