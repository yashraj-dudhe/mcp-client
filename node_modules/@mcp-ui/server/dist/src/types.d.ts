export type URI = `ui://${string}`;
export type MimeType = 'text/html' | 'text/uri-list' | 'application/vnd.mcp-ui.remote-dom+javascript; flavor=react' | 'application/vnd.mcp-ui.remote-dom+javascript; flavor=webcomponents';
export type HtmlTextContent = {
    uri: URI;
    mimeType: MimeType;
    text: string;
    blob?: never;
};
export type Base64BlobContent = {
    uri: URI;
    mimeType: MimeType;
    blob: string;
    text?: never;
};
export type ResourceContentPayload = {
    type: 'rawHtml';
    htmlString: string;
} | {
    type: 'externalUrl';
    iframeUrl: string;
} | {
    type: 'remoteDom';
    script: string;
    flavor: 'react' | 'webcomponents';
};
export interface CreateHtmlResourceOptions {
    uri: URI;
    content: ResourceContentPayload;
    delivery: 'text' | 'blob';
}
export type UiActionType = 'tool' | 'prompt' | 'link' | 'intent' | 'notification';
export type UiActionResultToolCall = {
    type: 'tool';
    payload: {
        toolName: string;
        params: Record<string, unknown>;
    };
};
export type UiActionResultPrompt = {
    type: 'prompt';
    payload: {
        prompt: string;
    };
};
export type UiActionResultLink = {
    type: 'link';
    payload: {
        url: string;
    };
};
export type UiActionResultIntent = {
    type: 'intent';
    payload: {
        intent: string;
        params: Record<string, unknown>;
    };
};
export type UiActionResultNotification = {
    type: 'notification';
    payload: {
        message: string;
    };
};
export type UiActionResult = UiActionResultToolCall | UiActionResultPrompt | UiActionResultLink | UiActionResultIntent | UiActionResultNotification;
//# sourceMappingURL=types.d.ts.map